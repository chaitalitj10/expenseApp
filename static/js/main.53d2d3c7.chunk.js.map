{"version":3,"sources":["Components/Expenses/ExpenseFilter.js","Components/Expenses/ExpenseDate.js","Components/Expenses/ExpenseItem.js","Components/Expenses/ExpensesList.js","Components/Chart/ChartBar.js","Components/Chart/Chart.js","Components/Expenses/ExpensesChart.js","Components/Expenses/Expenses.js","Components/NewExpense/NewExpenseForm.js","Components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseFilter","props","className","value","selected","onChange","event","onFilter","target","ExpenseDate","month","dateHolder","toLocaleString","day","year","getFullYear","ExpenseItem","useState","title","currentTitle","updateTitle","date","amount","onClick","ExpensesList","item","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValue","dataPoints","dataPoint","totalMax","max","ExpensesChart","chartDatePoints","expenses","getMonth","Expenses","filterYear","setFilteredYear","filteredExpenses","filter","toString","expensefilter","NewExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onCancle","NewExpense","isEditing","setEditing","enteredExpenseData","random","onAddExpense","DUMMY_DATA","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.53d2d3c7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./ExpenseFilter.css\";\r\n\r\nfunction ExpenseFilter (props) {\r\n\r\n    const yearChangeHandler = (event) =>{\r\n        props.onFilter(event.target.value);\r\n    }\r\n    return (\r\n      <div className='expenses-filter'>\r\n        <div className='expenses-filter__control'>\r\n          <label>Filter by year</label>\r\n          <select value = {props.selected} onChange={yearChangeHandler}>\r\n            <option value='2022'>2022</option>\r\n            <option value='2021'>2021</option>\r\n            <option value='2020'>2020</option>\r\n            <option value='2019'>2019</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default ExpenseFilter;","import \"./ExpenseDate.css\";\r\nimport React from \"react\";\r\n\r\n\r\nfunction ExpenseDate(props){\r\n    const month = props.dateHolder.toLocaleString('en-US' , {month : 'long'})\r\n    const day = props.dateHolder.toLocaleString('en-US',{day : '2-digit'});\r\n    const year = props.dateHolder.getFullYear();\r\n    return(\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ExpenseDate;","import \"./ExpensesItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport React,{useState} from \"react\";\r\n\r\n\r\nfunction ExpenseItem(props) {\r\n  const [currentTitle,updateTitle] = useState(props.title);\r\n\r\n  const clickHandler = () =>{\r\n    updateTitle('Updated!');\r\n  }\r\n  return (\r\n    <div className=\"expense-item\">\r\n      <ExpenseDate dateHolder={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{currentTitle}</h2>\r\n        <div className=\"expense-item__price \">${props.amount}</div>\r\n      </div>\r\n      <button onClick={clickHandler}>Change Title</button>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nfunction ExpensesList(props) {\r\n  if (props.item.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n  }\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.item.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nfunction ChartBar(props) {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight}}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nfunction Chart(props) {\r\n    const dataPointValue = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMax = Math.max(...dataPointValue);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoints) => (\r\n        <ChartBar\r\n          key={dataPoints.label}\r\n          value={dataPoints.value}\r\n          maxValue={totalMax}\r\n          label={dataPoints.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nfunction ExpensesChart(props){\r\n    const chartDatePoints = [\r\n        {label: 'Jan' , value : 0},\r\n        {label: 'Feb' , value : 0},\r\n        {label: 'Mar' , value : 0},\r\n        {label: 'Apr' , value : 0},\r\n        {label: 'May' , value : 0},\r\n        {label: 'Jun' , value : 0},\r\n        {label: 'Jul' , value : 0},\r\n        {label: 'Aug' , value : 0},\r\n        {label: 'Sep' , value : 0},\r\n        {label: 'Oct' , value : 0},\r\n        {label: 'Nov' , value : 0},\r\n        {label: 'Dec' , value : 0},\r\n    ];\r\n\r\n    for(const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDatePoints[expenseMonth].value += expense.amount;\r\n    }\r\n    return(\r\n        <Chart dataPoints={chartDatePoints}/>\r\n    )\r\n}\r\n\r\n\r\nexport default ExpensesChart;","import \"./Expenses.css\";\r\nimport React, { useState } from \"react\";\r\nimport ExpenseFilter from \"./ExpenseFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nfunction Expenses(props) {\r\n  const [filterYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const yearFilterHandler = (expensefilter) => {\r\n    setFilteredYear(expensefilter);\r\n  };\r\n  const filteredExpenses = props.expense.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filterYear;\r\n  });\r\n\r\n\r\n \r\n\r\n  return (\r\n    <div>\r\n      <div className=\"expenses\">\r\n        <ExpenseFilter selected={filterYear} onFilter={yearFilterHandler} />\r\n        <ExpensesChart  expenses = {filteredExpenses}/>\r\n        <ExpensesList item={filteredExpenses}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./NewExpenseForm.css\";\r\n\r\nfunction NewExpenseForm(props) {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n            value={enteredAmount}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={dateChangeHandler}\r\n            value={enteredDate}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancle}>Cancle</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default NewExpenseForm;\r\n","import React,{useState} from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport NewExpenseForm from \"./NewExpenseForm\";\r\n\r\nfunction NewExpense(props){\r\n    const [isEditing , setEditing] = useState(false);\r\n    const saveExpenseDataHandler = (enteredExpenseData) =>{\r\n        const expenseData={\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n    };\r\n\r\n    const SetEditingHandler = () =>{\r\n        setEditing(true);\r\n    }\r\n\r\n    const StopEditingHandler = () =>{\r\n        setEditing(false);\r\n    }\r\n    return(\r\n        <div className=\"new-expense\">\r\n            {!isEditing && <button onClick={SetEditingHandler}>Add New Expenses</button>}\r\n            {isEditing && <NewExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancle={StopEditingHandler}/>}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default NewExpense;","import Expenses from \"./Components/Expenses/Expenses\";\nimport NewExpense from \"./Components/NewExpense/NewExpense\";\nimport React, { useState } from \"react\";\n\n\nconst DUMMY_DATA = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = ()=> {\n  const [expenses , setExpenses ] = useState(DUMMY_DATA);\n\n  const AddExpenseHandler = (expense) =>{\n    setExpenses(prevExpenses => {\n      return [expense , ...prevExpenses];\n    });\n  };\n  return (\n    <div>\n      <NewExpense onAddExpense={AddExpenseHandler}/>\n      <Expenses expense={expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}